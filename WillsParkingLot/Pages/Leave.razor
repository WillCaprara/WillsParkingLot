@page "/leave"

@using WillsParkingLot.Enums;
@using WillsParkingLot.Models;
@using WillsParkingLot.Services;

@inject ParkingService _parkingService;

<h2>Check out Vehicle</h2>

<div>
    <div>
        <div>
            <label for="txtLicensePlate">License Plate: </label>
            <input type="text" id="txtLicensePlate" @bind="@car.LicensePlate" required />

            <label for="txtModel">Model: </label>
            <input type="text" id="txtModel" @bind="@car.Model" required />

            <label for="txtColor">Color: </label>
            <input type="text" id="txtColor" @bind="@car.Color" required />

            <label for="ddlType">Type: </label>
            <select id="ddlType" @bind="@car.Type">
                @foreach (var carType in Enum.GetValues(typeof(CarType)))
                {
                    <option>@carType</option>
                }
            </select>
        </div>
        <br />
        <div>
            <button id="btnSearch" class="btn-outline-primary" @onclick="SearchCars">Search</button>
        </div>
    </div>
    <br />
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>License Plate</th>
                    <th>Model</th>
                    <th>Color</th>
                    <th>Type</th>
                    <th>Check In Date and Time</th>
                    <th>Checkout</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var parking in searchResults)
                {
                    <tr>
                        <td>@parking.Car.LicensePlate</td>
                        <td>@parking.Car.Model</td>
                        <td>@parking.Car.Color</td>
                        <td>@parking.Car.Type</td>
                        <td>@parking.ArriveTime</td>
                        <td><button id="btn-@parking.ParkingId" @onclick="()=> CheckoutCar(parking)">Checkout</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div>
    <h3>Total Fee for parking:</h3>
    <h4>$ @parkingFee.TotalParkingFeeCollected</h4>
</div>

@code {

    Car car = new Car();
    private IEnumerable<Parking> searchResults = new List<Parking>();
    private ParkingFee parkingFee = new ParkingFee();

    protected override async Task OnInitializedAsync()
    {
        searchResults = await _parkingService.GetAllCarsCurrentlyInTheParkingLot();
    }

    private async Task SearchCars()
    {
        searchResults = await _parkingService.SearchCars(car);
    }

    private async Task CheckoutCar(Parking parking)
    {
        parkingFee = await _parkingService.CheckoutCar(parking);
        searchResults = await _parkingService.GetAllCarsCurrentlyInTheParkingLot();
    }
}
